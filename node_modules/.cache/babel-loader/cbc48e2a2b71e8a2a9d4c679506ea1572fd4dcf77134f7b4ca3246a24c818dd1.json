{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-469af010\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hello HelloWorld\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8 col-md-offset-2\\\">\\n        <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading\\\">List of users</div>\\n          <div class=\\\"panel-body\\\">\\n            <table class=\\\"table\\\">\\n              <thead>\\n                <tr>\\n                  <th>Name</th>\\n                  <th>Email</th>\\n                  <th>Phone</th>\\n                  <th>Grade</th>\\n                  <th>Actions</th>\\n                </tr>\\n              </thead>\\n              <tbody>\\n                <tr v-for=\\\"user in users\\\" :key=\\\"user.id\\\">\\n                  <td>{{ user.PersonName }}</td>\\n                  <td>{{ user.email }}</td>\\n                  <td>{{ user.phone }}</td>\\n                  <td>{{ user.Grad }}</td>\\n                  <td>\\n                    <!-- <button @click=\\\"editPerson(user.id)\\\">Edit</button> \"), _createCommentVNode(\" <router-link :to=\\\"{ name: 'UpdatePerson', params: { id: user.id } }\\\">\\n                      Edit\\n                    </router-link>\\n                    <router-link :to=\\\"{ name: 'PersonDetails', params: { id: user.id } }\\\">\\n                      User Details\\n                    </router-link>\\n                     <button @click=\\\"showDetails(user.id)\\\">Details</button> \"), _createCommentVNode(\" </td>\\n                </tr>\\n              </tbody>\\n            </table>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <a href=\\\"CreatePerson.vue\\\">Create Person</a>\\n\\n\\n  </div> \"), _hoisted_1], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_createCommentVNode","_hoisted_1"],"sources":["D:\\Vue\\vueproject\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\n\n  <!-- <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 col-md-offset-2\">\n        <div class=\"panel panel-default\">\n          <div class=\"panel-heading\">List of users</div>\n          <div class=\"panel-body\">\n            <table class=\"table\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Phone</th>\n                  <th>Grade</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for=\"user in users\" :key=\"user.id\">\n                  <td>{{ user.PersonName }}</td>\n                  <td>{{ user.email }}</td>\n                  <td>{{ user.phone }}</td>\n                  <td>{{ user.Grad }}</td>\n                  <td>\n                    <!-- <button @click=\"editPerson(user.id)\">Edit</button> -->\n  <!-- <router-link :to=\"{ name: 'UpdatePerson', params: { id: user.id } }\">\n                      Edit\n                    </router-link>\n                    <router-link :to=\"{ name: 'PersonDetails', params: { id: user.id } }\">\n                      User Details\n                    </router-link>\n                     <button @click=\"showDetails(user.id)\">Details</button> -->\n  <!-- </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <a href=\"CreatePerson.vue\">Create Person</a>\n\n\n  </div> -->\n  <h1>Hello HelloWorld</h1>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      users: [],\n    };\n  },\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  methods: {\n    getUsers() {\n      axios\n        .get('https://localhost:7148/Person/GetAllPersons')\n        .then(response => (this.users = response.data))\n        .catch(error => console.log(error.message));\n    },\n    // editPerson(_personId) {\n    //   this.$router.push({ name: 'UpdatePerson', params: { _personId } }); // Navigate to the UpdatePerson page\n    // },\n    // showDetails(_personId) {\n    //   this.$router.push({ name: 'PersonDetails', params: { _personId } }); // Navigate to the PersonDetails page\n    // },\n  }\n  ,\n  mounted() {\n    axios\n      .get('https://localhost:7148/Person/GetAllPersons')\n      .then(response => {\n        this.results = response.data[1];\n        console.log(this.results);\n      })\n      .catch(err => {\n        throw err;\n      });\n  }\n\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\n\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\na {\n  color: #42b983;\n}\n</style>\n"],"mappings":";;gEA8CEA,mBAAA,CAAyB,YAArB,kBAAgB;;uBA9CtBC,mBAAA,CAAAC,SAAA,SAEEC,mBAAA,w5BAuB6E,EAC7EA,mBAAA,kYAM6E,EAC7EA,mBAAA,gNAYU,EACVC,UAAyB,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}